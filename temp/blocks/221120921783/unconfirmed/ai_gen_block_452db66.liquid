{% doc %}
  @prompt
    full with text with read more link that show more text

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-expandable-text-{{ ai_gen_id }} {
    background-color: {{ block.settings.background_color }};
    padding: {{ block.settings.padding }}px;
    border-radius: {{ block.settings.border_radius }}px;
    max-width: 100%;
  }

  .ai-expandable-text__heading-{{ ai_gen_id }} {
    color: {{ block.settings.heading_color }};
    font-size: {{ block.settings.heading_size }}px;
    margin: 0 0 16px 0;
    font-weight:600;
  }

  .ai-expandable-text__content-{{ ai_gen_id }} {
    color: {{ block.settings.text_color }};
    font-size: {{ block.settings.text_size }}px;
    line-height: 1.6;
    margin: 0;
  }

  .ai-expandable-text__preview-{{ ai_gen_id }} {
    display: block;
  }

  .ai-expandable-text__full-{{ ai_gen_id }} {
    display: none;
  }

  .ai-expandable-text__toggle-{{ ai_gen_id }} {
    background: none;
    border: none;
    color: {{ block.settings.link_color }};
    font-size: {{ block.settings.text_size }}px;
    text-decoration: underline;
    cursor: pointer;
    padding: 0;
    margin-top: 8px;
    display: inline-block;
  }

  .ai-expandable-text__toggle-{{ ai_gen_id }}:hover {
    color: {{ block.settings.link_hover_color }};
  }

  .ai-expandable-text__toggle-{{ ai_gen_id }}:focus {
    outline: 2px solid {{ block.settings.link_color }};
    outline-offset: 2px;
  }

  .ai-expandable-text-{{ ai_gen_id }}.expanded .ai-expandable-text__preview-{{ ai_gen_id }} {
    display: none;
  }

  .ai-expandable-text-{{ ai_gen_id }}.expanded .ai-expandable-text__full-{{ ai_gen_id }} {
    display: block;
  }

  @media screen and (max-width: 749px) {
    .ai-expandable-text__heading-{{ ai_gen_id }} {
      font-size: {{ block.settings.heading_size | times: 0.8 }}px;
    }

    .ai-expandable-text-{{ ai_gen_id }} {
      padding: {{ block.settings.padding | times: 0.7 }}px;
    }
  }
{% endstyle %}

<expandable-text-{{ ai_gen_id }}
  class="ai-expandable-text-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
>
  {% if block.settings.heading != blank %}
    <h2 class="ai-expandable-text__heading-{{ ai_gen_id }}">{{ block.settings.heading }}</h2>
  {% endif %}<div class="ai-expandable-text__content-{{ ai_gen_id }}"><div class="ai-expandable-text__preview-{{ ai_gen_id }}">
      {{ block.settings.preview_text }}
    </div>

    <div class="ai-expandable-text__full-{{ ai_gen_id }}">
      {{ block.settings.full_text }}
    </div>
  </div><button
    class="ai-expandable-text__toggle-{{ ai_gen_id }}"
    aria-expanded="false">
    <span class="ai-expandable-text__read-more-{{ ai_gen_id }}">{{ block.settings.read_more_text }}</span>
    <span class="ai-expandable-text__read-less-{{ ai_gen_id }}" style="display: none;">{{ block.settings.read_less_text }}</span>
  </button>
</expandable-text-{{ ai_gen_id }}>

<script>
  (function() {
    class ExpandableText{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
      }

      connectedCallback() {
        this.toggleButton = this.querySelector('.ai-expandable-text__toggle-{{ ai_gen_id }}');
        this.readMoreText = this.querySelector('.ai-expandable-text__read-more-{{ ai_gen_id }}');
        this.readLessText = this.querySelector('.ai-expandable-text__read-less-{{ ai_gen_id }}');
        this.isExpanded = false;

        this.toggleButton.addEventListener('click', () => {
          this.toggleContent();
        });
      }

      toggleContent() {
        this.isExpanded = !this.isExpanded;
        
        if (this.isExpanded) {
          this.classList.add('expanded');
          this.toggleButton.setAttribute('aria-expanded', 'true');
          this.readMoreText.style.display = 'none';
          this.readLessText.style.display = 'inline';
        } else {
          this.classList.remove('expanded');
          this.toggleButton.setAttribute('aria-expanded', 'false');
          this.readMoreText.style.display = 'inline';
          this.readLessText.style.display = 'none';
        }
      }
    }

    customElements.define('expandable-text-{{ ai_gen_id }}', ExpandableText{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Expandable Text",
  "settings": [
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "About Our Story"
    },
    {
      "type": "richtext",
      "id": "preview_text",
      "label": "Preview text",
      "default": "<p>This is the preview text that will be shown initially. It should be a brief introduction or summary that entices readers to want to learn more about the topic.</p>"
    },
    {
      "type": "richtext",
      "id": "full_text",
      "label": "Full text",
      "default": "<p>This is the complete text that will be revealed when the user clicks 'Read more'. You can include multiple paragraphs, formatting, and all the detailed information you want to share.</p><p>This expanded content can be much longer and contain all the details that weren't included in the preview. It's perfect for detailed product descriptions, company stories, or any content where you want to give users the choice to read more.</p>"
    },
    {
      "type": "text",
      "id": "read_more_text",
      "label": "Read more text",
      "default": "Read more"
    },
    {
      "type": "text",
      "id": "read_less_text",
      "label": "Read less text",
      "default": "Read less"
    },
    {
      "type": "header",
      "content": "Style"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "Heading color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#666666"
    },
    {
      "type": "color",
      "id": "link_color",
      "label": "Link color",
      "default": "#000f9f"
    },
    {
      "type": "color",
      "id": "link_hover_color",
      "label": "Link hover color",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "heading_size",
      "min": 16,
      "max": 48,
      "step": 2,
      "unit": "px",
      "label": "Heading size",
      "default": 24
    },
    {
      "type": "range",
      "id": "text_size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Text size",
      "default": 16
    },
    {
      "type": "range",
      "id": "padding",
      "min": 0,
      "max": 60,
      "step": 4,
      "unit": "px",
      "label": "Padding",
      "default": 24
    },
    {
      "type": "range",
      "id": "border_radius",
      "min": 0,
      "max": 24,
      "step": 2,
      "unit": "px",
      "label": "Border radius",
      "default": 8
    }
  ],
  "presets": [
    {
      "name": "Expandable Text"
    }
  ],
  "tag": null
}
{% endschema %}