{% doc %}
  @prompt
    Create a custom button for Product card buy buttons section that can be added alongside existing buy buttons in a product grid layout

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-custom-buy-button-{{ ai_gen_id }} {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
    padding: {{ block.settings.button_padding }}px {{ block.settings.button_padding | times: 1.5 }}px;
    background-color: {{ block.settings.button_background }};
    color: {{ block.settings.button_text_color }};
    border: {{ block.settings.border_width }}px solid {{ block.settings.border_color }};
    border-radius: {{ block.settings.border_radius }}px;
    font-size: {{ block.settings.font_size }}px;
    font-weight: {{ block.settings.font_weight }};
    text-decoration: none;
    text-transform: {% if block.settings.text_uppercase %}uppercase{% else %}none{% endif %};
    cursor: pointer;
    transition: all 0.3s ease;
    width: 100%;
    min-height: 44px;
    position: relative;
    overflow: hidden;}

  .ai-custom-buy-button-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.button_hover_background }};
    color: {{ block.settings.button_hover_text_color }};
    border-color: {{ block.settings.border_hover_color }};
    transform: translateY(-1px);
  }

  .ai-custom-buy-button-{{ ai_gen_id }}:focus {
    outline:2px solid {{ block.settings.button_background }};
    outline-offset: 2px;
  }

  .ai-custom-buy-button-{{ ai_gen_id }}:active {
    transform: translateY(0);
  }

  .ai-custom-buy-button-{{ ai_gen_id }}--disabled {
    opacity: 0.6;
    cursor: not-allowed;
    pointer-events: none;
  }

  .ai-custom-buy-button-icon-{{ ai_gen_id }} {
    width: {{ block.settings.icon_size }}px;
    height: {{ block.settings.icon_size }}px;
    flex-shrink: 0;
  }

  .ai-custom-buy-button-text-{{ ai_gen_id }} {
    flex-grow: 1;
    text-align: center;
  }

  {% if block.settings.show_loading_state %}
    .ai-custom-buy-button-{{ ai_gen_id }}[data-loading="true"] .ai-custom-buy-button-text-{{ ai_gen_id }} {
      opacity: 0.7;
    }

    .ai-custom-buy-button-{{ ai_gen_id }}[data-loading="true"]::after {
      content: '';
      position: absolute;
      top: 50%;
      right: 12px;
      width: 16px;
      height: 16px;
      margin-top: -8px;
      border: 2px solid transparent;
      border-top: 2px solid currentColor;
      border-radius: 50%;
      animation: ai-custom-buy-button-spin-{{ ai_gen_id }} 1s linear infinite;
    }

    @keyframes ai-custom-buy-button-spin-{{ ai_gen_id }} {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }
  {% endif %}

  {% if block.settings.button_style == 'gradient' %}
    .ai-custom-buy-button-{{ ai_gen_id }} {
      background: linear-gradient(135deg, {{ block.settings.button_background }}, {{ block.settings.gradient_end_color }});
    }

    .ai-custom-buy-button-{{ ai_gen_id }}:hover {
      background: linear-gradient(135deg, {{ block.settings.button_hover_background }}, {{ block.settings.gradient_hover_end_color }});
    }
  {% endif %}

  {% if block.settings.button_style == 'outline' %}
    .ai-custom-buy-button-{{ ai_gen_id }} {
      background-color: transparent;
      color: {{ block.settings.button_background }};
      border-color: {{ block.settings.button_background }};
    }

    .ai-custom-buy-button-{{ ai_gen_id }}:hover {
      background-color: {{ block.settings.button_background }};
      color: {{ block.settings.button_text_color }};}
  {% endif %}

  @media screen and (max-width: 749px) {
    .ai-custom-buy-button-{{ ai_gen_id }} {
      font-size: {{ block.settings.font_size | times: 0.9 }}px;
      padding: {{ block.settings.button_padding | times: 0.8 }}px {{ block.settings.button_padding | times: 1.2 }}px;
    }
  }
{% endstyle %}<custom-buy-button-{{ ai_gen_id }}
  class="ai-custom-buy-button-wrapper-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
  data-product-id="{{ product.id }}"
  data-variant-id="{{ product.selected_or_first_available_variant.id }}"
>
  {% if block.settings.button_action == 'add_to_cart' %}
    <button
      type="button"
      class="ai-custom-buy-button-{{ ai_gen_id }} {% unless product.available %}ai-custom-buy-button-{{ ai_gen_id }}--disabled{% endunless %}"
      data-action="add-to-cart"
      {% unless product.available %}disabled{% endunless %}>
      {% if block.settings.show_icon and block.settings.icon_position == 'left' %}
        <svg class="ai-custom-buy-button-icon-{{ ai_gen_id }}" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          {% case block.settings.icon_type %}
            {% when 'cart' %}
              <path d="M3 3h2l.4 2M7 13h10l4-8H5.4m0 0L7 13m0 0l-2.35 2.65a1 1 0 00.71.7h12.65M7 13v6a2 2 0 002 2h6a2 2 0 002-2v-6"/>
            {% when 'bag' %}
              <path d="M6 2L3 6v14a2 2 0 002 2h14a2 2 0 002-2V6l-3-4z"/><line x1="3" y1="6" x2="21" y2="6"/><path d="M16 10a4 4 0 01-8 0"/>
            {% when 'plus' %}
              <line x1="12" y1="5" x2="12" y2="19"/>
              <line x1="5" y1="12" x2="19" y2="12"/>
            {% when 'heart' %}
              <path d="M20.84 4.61a5.5 5.5 0 00-7.780L12 5.67l-1.06-1.06a5.5 5.5 0 00-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 000-7.78z"/>
          {% endcase %}
        </svg>
      {% endif %}<span class="ai-custom-buy-button-text-{{ ai_gen_id }}">
        {% if product.available %}
          {{ block.settings.button_text }}
        {% else %}
          {{ block.settings.sold_out_text }}
        {% endif %}
      </span>

      {% if block.settings.show_icon and block.settings.icon_position == 'right' %}
        <svg class="ai-custom-buy-button-icon-{{ ai_gen_id }}" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          {% case block.settings.icon_type %}
            {% when 'cart' %}
              <path d="M3 3h2l.4 2M7 13h10l4-8H5.4m0 0L7 13m0 0l-2.35 2.65a1 1 0 00.7 1.7h12.65M7 13v6a2 2 0 002 2h6a2 2 0 002-2v-6"/>
            {% when 'bag' %}
              <path d="M6 2L3 6v14a2 2 0 002 2h14a2 2 0 002-2V6l-3-4z"/>
              <line x1="3" y1="6" x2="21" y2="6"/>
              <path d="M16 10a4 4 0 01-8 0"/>
            {% when 'plus' %}
              <line x1="12" y1="5" x2="12" y2="19"/>
              <line x1="5" y1="12" x2="19" y2="12"/>
            {% when 'heart' %}
              <path d="M20.84 4.61a5.5 5.5 0 00-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 00-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 000-7.78z"/>
          {% endcase %}
        </svg>
      {% endif %}
    </button>
  {% else %}
    <a
      href="{{ product.url }}"
      class="ai-custom-buy-button-{{ ai_gen_id }}">
      {% if block.settings.show_icon and block.settings.icon_position == 'left' %}
        <svg class="ai-custom-buy-button-icon-{{ ai_gen_id }}" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M9 18l6-6-6-6"/>
        </svg>
      {% endif %}

      <span class="ai-custom-buy-button-text-{{ ai_gen_id }}">
        {{ block.settings.button_text }}
      </span>

      {% if block.settings.show_icon and block.settings.icon_position == 'right' %}
        <svg class="ai-custom-buy-button-icon-{{ ai_gen_id }}" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M9 18l6-6-6-6"/>
        </svg>
      {% endif %}
    </a>
  {% endif %}
</custom-buy-button-{{ ai_gen_id }}>

{% if block.settings.button_action == 'add_to_cart' %}
  <script>
    (function() {
      class CustomBuyButton{{ ai_gen_id }} extends HTMLElement {
        constructor() {
          super();
          this.button = this.querySelector('[data-action="add-to-cart"]');
          this.productId = this.dataset.productId;
          this.variantId = this.dataset.variantId;}

        connectedCallback() {
          if (this.button) {
            this.button.addEventListener('click', this.handleAddToCart.bind(this));
          }
        }

        async handleAddToCart(event) {
          event.preventDefault();
          
          if (this.button.disabled) return;

          {% if block.settings.show_loading_state %}
            this.button.setAttribute('data-loading', 'true');{% endif %}
          
          this.button.disabled = true;

          try {
            const formData = new FormData();
            formData.append('id', this.variantId);
            formData.append('quantity', 1);

            const response = await fetch('/cart/add.js', {
              method: 'POST',
              body: formData
            });

            if (response.ok) {
              const cartData = await response.json();
              
              document.dispatchEvent(new CustomEvent('cart:item-added', {
                detail: { variant: cartData }
              }));

              {% if block.settings.success_action == 'redirect_to_cart' %}
                window.location.href = '/cart';
              {% elsif block.settings.success_action == 'show_message' %}
                this.showSuccessMessage();
              {% endif %}
            } else {
              throw new Error('Failed to add to cart');
            }
          } catch (error) {
            console.error('Error adding to cart:', error);
            this.showErrorMessage();
          } finally {
            {% if block.settings.show_loading_state %}
              this.button.removeAttribute('data-loading');
            {% endif %}this.button.disabled = false;
          }
        }

        showSuccessMessage() {
          const originalText = this.button.querySelector('.ai-custom-buy-button-text-{{ ai_gen_id }}').textContent;
          this.button.querySelector('.ai-custom-buy-button-text-{{ ai_gen_id }}').textContent = '{{ block.settings.success_message }}';
          setTimeout(() => {
            this.button.querySelector('.ai-custom-buy-button-text-{{ ai_gen_id }}').textContent = originalText;
          }, 2000);
        }

        showErrorMessage() {
          const originalText = this.button.querySelector('.ai-custom-buy-button-text-{{ ai_gen_id }}').textContent;
          this.button.querySelector('.ai-custom-buy-button-text-{{ ai_gen_id }}').textContent = '{{ block.settings.error_message }}';
          
          setTimeout(() => {
            this.button.querySelector('.ai-custom-buy-button-text-{{ ai_gen_id }}').textContent = originalText;
          }, 2000);
        }
      }

      customElements.define('custom-buy-button-{{ ai_gen_id }}', CustomBuyButton{{ ai_gen_id }});
    })();
  </script>
{% endif %}

{% schema %}
{
  "name": "Custom Buy Button",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Button Content"
    },
    {
      "type": "select",
      "id": "button_action",
      "label": "Button action",
      "options": [
        {
          "value": "add_to_cart",
          "label": "Add to cart"
        },
        {
          "value": "view_product",
          "label": "View product"
        }
      ],
      "default": "add_to_cart"
    },
    {
      "type": "text",
      "id": "button_text",
      "label": "Button text",
      "default": "Add to Cart"
    },
    {
      "type": "text",
      "id": "sold_out_text",
      "label": "Sold out text",
      "default": "Sold Out"
    },
    {
      "type": "header",
      "content": "Button Style"
    },
    {
      "type": "select",
      "id": "button_style",
      "label": "Button style",
      "options": [
        {
          "value": "solid",
          "label": "Solid"
        },
        {
          "value": "outline",
          "label": "Outline"
        },
        {
          "value": "gradient",
          "label": "Gradient"
        }
      ],
      "default": "solid"
    },
    {
      "type": "color",
      "id": "button_background",
      "label": "Background color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Text color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_hover_background",
      "label": "Hover background color",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "button_hover_text_color",
      "label": "Hover text color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "gradient_end_color",
      "label": "Gradient end color",
      "default": "#666666"
    },
    {
      "type": "color",
      "id": "gradient_hover_end_color",
      "label": "Gradient hover end color",
      "default": "#999999"
    },
    {
      "type": "header",
      "content": "Border"
    },
    {
      "type": "range",
      "id": "border_width",
      "min": 0,
      "max": 4,
      "step": 1,
      "unit": "px",
      "label": "Border width",
      "default": 0
    },
    {
      "type": "color",
      "id": "border_color",
      "label": "Border color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "border_hover_color",
      "label": "Border hover color",
      "default": "#333333"
    },
    {
      "type": "range",
      "id": "border_radius",
      "min": 0,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Border radius",
      "default": 6
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "range",
      "id": "font_size",
      "min": 10,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Font size",
      "default": 14
    },
    {
      "type": "select",
      "id": "font_weight",
      "label": "Font weight",
      "options": [
        {
          "value": "400",
          "label": "Normal"
        },
        {
          "value": "500",
          "label": "Medium"
        },
        {
          "value": "600",
          "label": "Semi Bold"
        },
        {
          "value": "700",
          "label": "Bold"
        }
      ],
      "default": "500"
    },
    {
      "type": "checkbox",
      "id": "text_uppercase",
      "label": "Uppercase text",
      "default": false
    },
    {
      "type": "header",
      "content": "Spacing"
    },
    {
      "type": "range",
      "id": "button_padding",
      "min": 8,
      "max": 24,
      "step": 2,
      "unit": "px",
      "label": "Button padding",
      "default": 12
    },
    {
      "type": "header",
      "content": "Icon"
    },
    {
      "type": "checkbox",
      "id": "show_icon",
      "label": "Show icon",
      "default": true
    },
    {
      "type": "select",
      "id": "icon_type",
      "label": "Icon type",
      "options": [
        {
          "value": "cart",
          "label": "Shopping cart"
        },
        {
          "value": "bag",
          "label": "Shopping bag"
        },
        {
          "value": "plus",
          "label": "Plus"
        },
        {
          "value": "heart",
          "label": "Heart"
        }
      ],
      "default": "cart"
    },
    {
      "type": "select",
      "id": "icon_position",
      "label": "Icon position",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "left"
    },
    {
      "type": "range",
      "id": "icon_size",
      "min": 12,
      "max": 24,
      "step": 2,
      "unit": "px",
      "label": "Icon size",
      "default": 16
    },
    {
      "type": "header",
      "content": "Behavior"
    },
    {
      "type": "checkbox",
      "id": "show_loading_state",
      "label": "Show loading animation",
      "default": true
    },
    {
      "type": "select",
      "id": "success_action",
      "label": "After adding to cart",
      "options": [
        {
          "value": "show_message",
          "label": "Show success message"
        },
        {
          "value": "redirect_to_cart",
          "label": "Redirect to cart"
        },
        {
          "value": "none",
          "label": "No action"
        }
      ],
      "default": "show_message"
    },
    {
      "type": "text",
      "id": "success_message",
      "label": "Success message",
      "default": "Added to cart!"
    },
    {
      "type": "text",
      "id": "error_message",
      "label": "Error message",
      "default": "Error adding to cart"
    }
  ],
  "presets": [
    {
      "name": "Custom Buy Button"
    }
  ]
}
{% endschema %}