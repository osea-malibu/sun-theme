{% doc %}
  @prompt
    A comparison table, 5 columns, 4 rows. But should be customizable and a carousel on mpbile., Add the possibility to add image in the fist row

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-comparison-table-{{ ai_gen_id }} {
    width: 100%;
    margin: 0 auto;
    padding: 20px;
  }

  .ai-comparison-table-wrapper-{{ ai_gen_id }} {
    overflow: hidden;
    border-radius: {{ block.settings.border_radius }}px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);}

  .ai-comparison-table-desktop-{{ ai_gen_id }} {
    display: block;
    width: 100%;}

  .ai-comparison-table-mobile-{{ ai_gen_id }} {
    display: none;
    position: relative;
  }

  .ai-comparison-table-desktop-{{ ai_gen_id }} table {
    width: 100%;
    border-collapse: collapse;
    background-color: {{ block.settings.table_background }};}

  .ai-comparison-table-desktop-{{ ai_gen_id }} th,
  .ai-comparison-table-desktop-{{ ai_gen_id }} td {
    padding: {{ block.settings.cell_padding }}px;
    text-align: {{ block.settings.text_alignment }};
    border: 1px solid {{ block.settings.border_color }};
    color: {{ block.settings.text_color }};font-size: {{ block.settings.font_size }}px;vertical-align: middle;
  }

  .ai-comparison-table-desktop-{{ ai_gen_id }} th {
    background-color: {{ block.settings.header_background }};
    color: {{ block.settings.header_text_color }};
    font-weight: 600;
  }

  .ai-comparison-table-desktop-{{ ai_gen_id }} tr:nth-child(even) td {
    background-color: {{ block.settings.alternate_row_background }};
  }

  .ai-comparison-table-image-{{ ai_gen_id }} {
    width: {{ block.settings.image_width }}px;
    height: {{ block.settings.image_height }}px;
    object-fit: cover;
    border-radius: {{ block.settings.image_border_radius }}px;
    margin: 0 auto;
    display: block;
  }

  .ai-comparison-table-image-placeholder-{{ ai_gen_id }} {
    width: {{ block.settings.image_width }}px;
    height: {{ block.settings.image_height }}px;
    border-radius: {{ block.settings.image_border_radius }}px;
    margin: 0 auto;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #f4f4f4;}

  .ai-comparison-table-image-placeholder-{{ ai_gen_id }} svg {
    width:60%;
    height: 60%;
    opacity: 0.5;
  }

  .ai-comparison-table-mobile-carousel-{{ ai_gen_id }} {
    display: flex;
    transition: transform 0.3s ease;width: calc(100% * {{ block.settings.columns_count }});
  }

  .ai-comparison-table-mobile-column-{{ ai_gen_id }} {
    flex: 0 0 100%;
    background-color: {{ block.settings.table_background }};
    border: 1px solid {{ block.settings.border_color }};
    border-radius: {{ block.settings.border_radius }}px;
    margin-right: 10px;
    overflow: hidden;
  }

  .ai-comparison-table-mobile-column-{{ ai_gen_id }}:last-child {
    margin-right: 0;
  }

  .ai-comparison-table-mobile-header-{{ ai_gen_id }} {
    background-color: {{ block.settings.header_background }};
    color: {{ block.settings.header_text_color }};
    padding: {{ block.settings.cell_padding }}px;
    font-weight: 600;
    text-align: center;
    font-size: {{ block.settings.font_size }}px;
  }

  .ai-comparison-table-mobile-cell-{{ ai_gen_id }} {
    padding: {{ block.settings.cell_padding }}px;
    border-bottom: 1px solid {{ block.settings.border_color }};
    color: {{ block.settings.text_color }};
    font-size: {{ block.settings.font_size }}px;text-align: {{ block.settings.text_alignment }};
  }

  .ai-comparison-table-mobile-cell-{{ ai_gen_id }}:last-child {
    border-bottom: none;
  }

  .ai-comparison-table-mobile-cell-{{ ai_gen_id }}:nth-child(even) {
    background-color: {{ block.settings.alternate_row_background }};
  }

  .ai-comparison-table-mobile-image-cell-{{ ai_gen_id }} {
    text-align: center;}

  .ai-comparison-table-navigation-{{ ai_gen_id }} {
    display: none;
    justify-content: center;
    align-items: center;
    gap: 20px;
    margin-top: 20px;
  }

  .ai-comparison-table-nav-button-{{ ai_gen_id }} {
    background-color: {{ block.settings.nav_button_background }};
    color: {{ block.settings.nav_button_text }};
    border: none;
    border-radius: 50%;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: background-color 0.3s ease;
  }

  .ai-comparison-table-nav-button-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.nav_button_hover }};
  }

  .ai-comparison-table-nav-button-{{ ai_gen_id }}:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .ai-comparison-table-indicators-{{ ai_gen_id }} {
    display: flex;
    gap: 8px;
  }

  .ai-comparison-table-indicator-{{ ai_gen_id }} {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background-color: {{ block.settings.border_color }};
    cursor: pointer;
    transition: background-color 0.3s ease;
  }

  .ai-comparison-table-indicator-{{ ai_gen_id }}.active {
    background-color: {{ block.settings.nav_button_background }};
  }

  @media screen and (max-width: 768px) {
    .ai-comparison-table-desktop-{{ ai_gen_id }} {
      display: none;
    }

    .ai-comparison-table-mobile-{{ ai_gen_id }} {
      display: block;
    }

    .ai-comparison-table-navigation-{{ ai_gen_id }} {
      display: flex;
    }

    .ai-comparison-table-image-{{ ai_gen_id }},
    .ai-comparison-table-image-placeholder-{{ ai_gen_id }} {
      width: {{ block.settings.image_width | times: 0.8 }}px;
      height: {{ block.settings.image_height | times: 0.8 }}px;
    }
  }
{% endstyle %}

<comparison-table-{{ ai_gen_id }}
  class="ai-comparison-table-{{ ai_gen_id }}"
  data-columns="{{ block.settings.columns_count }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-comparison-table-wrapper-{{ ai_gen_id }}">
    <div class="ai-comparison-table-desktop-{{ ai_gen_id }}">
      <table>
        <thead>
          <tr>
            {% for i in (1..block.settings.columns_count) %}
              {% assign header_key = 'header_' | append: i %}
              <th>{{ block.settings[header_key] }}</th>
            {% endfor %}
          </tr>
        </thead>
        <tbody>
          {% if block.settings.show_image_row %}
            <tr>
              {% for col in (1..block.settings.columns_count) %}
                {% assign image_key = 'image_' | append: col %}
                <td>
                  {% if block.settings[image_key] %}
                    <img
                      src="{{ block.settings[image_key] | image_url: width: 200}}"
                      alt="{{ block.settings[image_key].alt | escape }}"
                      class="ai-comparison-table-image-{{ ai_gen_id }}"
                loading="lazy"
                width="{{ block.settings.image_width }}"
                      height="{{ block.settings.image_height }}"
                    >
                  {% else %}
                    <div class="ai-comparison-table-image-placeholder-{{ ai_gen_id }}">
                      {{'image' | placeholder_svg_tag }}
                    </div>
                  {% endif %}
                </td>
              {% endfor %}
            </tr>
          {% endif %}
          {% for row in (1..block.settings.rows_count) %}
            <tr>
              {% for col in (1..block.settings.columns_count) %}
                {% assign cell_key = 'cell_' | append: row | append: '_' | append: col %}
                <td>{{ block.settings[cell_key] }}</td>
              {% endfor %}
            </tr>
          {% endfor %}
        </tbody>
      </table>
    </div>

    <div class="ai-comparison-table-mobile-{{ ai_gen_id }}">
      <div class="ai-comparison-table-mobile-carousel-{{ ai_gen_id }}">
        {% for col in (1..block.settings.columns_count) %}
          {% assign header_key = 'header_' | append: col %}
          {% assign image_key = 'image_' | append: col %}
          <div class="ai-comparison-table-mobile-column-{{ ai_gen_id }}">
            <div class="ai-comparison-table-mobile-header-{{ ai_gen_id }}">
              {{ block.settings[header_key] }}
            </div>
            {% if block.settings.show_image_row %}
              <div class="ai-comparison-table-mobile-cell-{{ ai_gen_id }} ai-comparison-table-mobile-image-cell-{{ ai_gen_id }}">
                {% if block.settings[image_key] %}
                  <img
                    src="{{ block.settings[image_key] | image_url: width: 200 }}"
                    alt="{{ block.settings[image_key].alt | escape }}"
                    class="ai-comparison-table-image-{{ ai_gen_id }}"
                    loading="lazy"
                    width="{{ block.settings.image_width }}"
                    height="{{ block.settings.image_height }}"
                  >
                {% else %}
                  <div class="ai-comparison-table-image-placeholder-{{ ai_gen_id }}">
                    {{ 'image' | placeholder_svg_tag }}
                  </div>
                {% endif %}
              </div>
            {% endif %}{% for row in (1..block.settings.rows_count) %}
              {% assign cell_key = 'cell_' | append: row | append: '_' | append: col %}
              <div class="ai-comparison-table-mobile-cell-{{ ai_gen_id }}">
                {{ block.settings[cell_key] }}
              </div>
            {% endfor %}
          </div>
        {% endfor %}
      </div></div>
  </div>

  <div class="ai-comparison-table-navigation-{{ ai_gen_id }}">
    <button class="ai-comparison-table-nav-button-{{ ai_gen_id }}" data-direction="prev" aria-label="Previous column">
      <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <polyline points="15,18 9,12 15,6"></polyline>
      </svg>
    </button>
    
    <div class="ai-comparison-table-indicators-{{ ai_gen_id }}">
      {% for i in (1..block.settings.columns_count) %}<div class="ai-comparison-table-indicator-{{ ai_gen_id }}" data-index="{{ forloop.index0 }}"></div>
      {% endfor %}
    </div>
    
    <button class="ai-comparison-table-nav-button-{{ ai_gen_id }}" data-direction="next" aria-label="Next column">
      <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <polyline points="9,18 15,12 9,6"></polyline>
      </svg>
    </button>
  </div>
</comparison-table-{{ ai_gen_id }}>

<script>
  (function() {
    class ComparisonTable{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.currentIndex = 0;
        this.totalColumns = parseInt(this.dataset.columns);
      }

      connectedCallback() {
        this.carousel = this.querySelector('.ai-comparison-table-mobile-carousel-{{ ai_gen_id }}');
        this.prevButton = this.querySelector('[data-direction="prev"]');
        this.nextButton = this.querySelector('[data-direction="next"]');
        this.indicators = this.querySelectorAll('.ai-comparison-table-indicator-{{ ai_gen_id }}');
        this.setupEventListeners();
        this.updateCarousel();
      }

      setupEventListeners() {
        this.prevButton.addEventListener('click', () => this.goToPrevious());
        this.nextButton.addEventListener('click', () => this.goToNext());
        
        this.indicators.forEach((indicator, index) => {
          indicator.addEventListener('click', () => this.goToSlide(index));
        });

        let startX = 0;
        let currentX = 0;
        let isDragging = false;

        this.carousel.addEventListener('touchstart', (e) => {
          startX = e.touches[0].clientX;
          isDragging = true;
        });

        this.carousel.addEventListener('touchmove', (e) => {
          if (!isDragging) return;
          currentX = e.touches[0].clientX;
        });

        this.carousel.addEventListener('touchend', () => {
          if (!isDragging) return;
          isDragging = false;
          const diffX = startX - currentX;
          const threshold = 50;
          
          if (diffX > threshold) {
            this.goToNext();
          } else if (diffX < -threshold) {
            this.goToPrevious();
          }
        });
      }

      goToPrevious() {
        if (this.currentIndex > 0) {
          this.currentIndex--;
          this.updateCarousel();
        }
      }

      goToNext() {
        if (this.currentIndex < this.totalColumns - 1) {
          this.currentIndex++;
          this.updateCarousel();
        }
      }

      goToSlide(index) {
        this.currentIndex = index;
        this.updateCarousel();
      }

      updateCarousel() {
        const translateX = -this.currentIndex * 100;
        this.carousel.style.transform = `translateX(${translateX}%)`;
        
        this.prevButton.disabled = this.currentIndex === 0;
        this.nextButton.disabled = this.currentIndex === this.totalColumns - 1;
        this.indicators.forEach((indicator, index) => {
          indicator.classList.toggle('active', index === this.currentIndex);
        });
      }
    }

    customElements.define('comparison-table-{{ ai_gen_id }}', ComparisonTable{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Comparison Table",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Table Structure"
    },
    {
      "type": "range",
      "id": "columns_count",
      "min": 2,
      "max": 6,
      "step": 1,
      "label": "Number of columns",
      "default": 5
    },
    {
      "type": "range",
      "id": "rows_count",
      "min": 1,
      "max": 8,
      "step": 1,
      "label": "Number of rows",
      "default": 4
    },
    {
      "type": "checkbox",
      "id": "show_image_row",
      "label": "Show image row",
      "default": true
    },
    {
      "type": "header",
      "content": "Column Headers"
    },
    {
      "type": "text",
      "id": "header_1",
      "label": "Header 1",
      "default": "Feature"
    },
    {
      "type": "text",
      "id": "header_2",
      "label": "Header 2",
      "default": "Basic"
    },
    {
      "type": "text",
      "id": "header_3",
      "label": "Header 3",
      "default": "Pro"
    },
    {
      "type": "text",
      "id": "header_4",
      "label": "Header 4",
      "default": "Premium"
    },
    {
      "type": "text",
      "id": "header_5",
      "label": "Header 5",
      "default": "Enterprise"
    },
    {
      "type": "text",
      "id": "header_6",
      "label": "Header 6"
    },
    {
      "type": "header",
      "content": "Column Images"
    },
    {
      "type": "image_picker",
      "id": "image_1",
      "label": "Image 1"
    },
    {
      "type": "image_picker",
      "id": "image_2",
      "label": "Image 2"
    },
    {
      "type": "image_picker",
      "id": "image_3",
      "label": "Image 3"
    },
    {
      "type": "image_picker",
      "id": "image_4",
      "label": "Image 4"
    },
    {
      "type": "image_picker",
      "id": "image_5",
      "label": "Image 5"
    },
    {
      "type": "image_picker",
      "id": "image_6",
      "label": "Image 6"
    },
    {
      "type": "range",
      "id": "image_width",
      "min": 50,
      "max": 200,
      "step": 10,
      "unit": "px",
      "label": "Image width",
      "default": 80
    },
    {
      "type": "range",
      "id": "image_height",
      "min": 50,
      "max": 200,
      "step": 10,
      "unit": "px",
      "label": "Image height",
      "default": 80
    },
    {
      "type": "range",
      "id": "image_border_radius",
      "min": 0,
      "max": 50,
      "step": 2,
      "unit": "px",
      "label": "Image border radius",
      "default": 8
    },
    {
      "type": "header",
      "content": "Row1 Data"
    },
    {
      "type": "text",
      "id": "cell_1_1",
      "label": "Row 1, Column 1",
      "default": "Price"
    },
    {
      "type": "text",
      "id": "cell_1_2",
      "label": "Row 1, Column 2",
      "default": "$9/mo"
    },
    {
      "type": "text",
      "id": "cell_1_3",
      "label": "Row 1, Column 3",
      "default": "$19/mo"
    },
    {
      "type": "text",
      "id": "cell_1_4",
      "label": "Row 1, Column 4",
      "default": "$39/mo"
    },
    {
      "type": "text",
      "id": "cell_1_5",
      "label": "Row 1, Column 5",
      "default": "$99/mo"
    },
    {
      "type": "text",
      "id": "cell_1_6",
      "label": "Row 1, Column 6"
    },
    {
      "type": "header",
      "content": "Row 2 Data"
    },
    {
      "type": "text",
      "id": "cell_2_1",
      "label": "Row 2, Column 1",
      "default": "Storage"
    },
    {
      "type": "text",
      "id": "cell_2_2",
      "label": "Row 2, Column 2",
      "default": "10GB"
    },
    {
      "type": "text",
      "id": "cell_2_3",
      "label": "Row 2, Column 3",
      "default": "100GB"
    },
    {
      "type": "text",
      "id": "cell_2_4",
      "label": "Row 2, Column 4",
      "default": "1TB"
    },
    {
      "type": "text",
      "id": "cell_2_5",
      "label": "Row 2, Column 5",
      "default": "Unlimited"
    },
    {
      "type": "text",
      "id": "cell_2_6",
      "label": "Row 2, Column 6"
    },
    {
      "type": "header",
      "content": "Row 3 Data"
    },
    {
      "type": "text",
      "id": "cell_3_1",
      "label": "Row 3, Column 1",
      "default": "Users"
    },
    {
      "type": "text",
      "id": "cell_3_2",
      "label": "Row 3, Column 2",
      "default": "1"
    },
    {
      "type": "text",
      "id": "cell_3_3",
      "label": "Row 3, Column 3",
      "default": "5"
    },
    {
      "type": "text",
      "id": "cell_3_4",
      "label": "Row 3, Column 4",
      "default": "25"
    },
    {
      "type": "text",
      "id": "cell_3_5",
      "label": "Row 3, Column 5",
      "default": "Unlimited"
    },
    {
      "type": "text",
      "id": "cell_3_6",
      "label": "Row 3, Column 6"
    },
    {
      "type": "header",
      "content": "Row 4 Data"
    },
    {
      "type": "text",
      "id": "cell_4_1",
      "label": "Row 4, Column 1",
      "default": "Support"
    },
    {
      "type": "text",
      "id": "cell_4_2",
      "label": "Row 4, Column 2",
      "default": "Email"
    },
    {
      "type": "text",
      "id": "cell_4_3",
      "label": "Row 4, Column 3",
      "default": "Email + Chat"
    },
    {
      "type": "text",
      "id": "cell_4_4",
      "label": "Row 4, Column 4",
      "default": "24/7 Phone"
    },
    {
      "type": "text",
      "id": "cell_4_5",
      "label": "Row 4, Column 5",
      "default": "Dedicated Manager"
    },
    {
      "type": "text",
      "id": "cell_4_6",
      "label": "Row 4, Column 6"
    },
    {
      "type": "header",
      "content": "Row 5 Data"
    },
    {
      "type": "text",
      "id": "cell_5_1",
      "label": "Row 5, Column 1"
    },
    {
      "type": "text",
      "id": "cell_5_2",
      "label": "Row 5, Column 2"
    },
    {
      "type": "text",
      "id": "cell_5_3",
      "label": "Row 5, Column 3"
    },
    {
      "type": "text",
      "id": "cell_5_4",
      "label": "Row 5, Column 4"
    },
    {
      "type": "text",
      "id": "cell_5_5",
      "label": "Row 5, Column 5"
    },
    {
      "type": "text",
      "id": "cell_5_6",
      "label": "Row 5, Column 6"
    },
    {
      "type": "header",
      "content": "Row 6 Data"
    },
    {
      "type": "text",
      "id": "cell_6_1",
      "label": "Row 6, Column 1"
    },
    {
      "type": "text",
      "id": "cell_6_2",
      "label": "Row 6, Column 2"
    },
    {
      "type": "text",
      "id": "cell_6_3",
      "label": "Row 6, Column 3"
    },
    {
      "type": "text",
      "id": "cell_6_4",
      "label": "Row 6, Column 4"
    },
    {
      "type": "text",
      "id": "cell_6_5",
      "label": "Row 6, Column 5"
    },
    {
      "type": "text",
      "id": "cell_6_6",
      "label": "Row 6, Column 6"
    },
    {
      "type": "header",
      "content": "Row 7 Data"
    },
    {
      "type": "text",
      "id": "cell_7_1",
      "label": "Row 7, Column 1"
    },
    {
      "type": "text",
      "id": "cell_7_2",
      "label": "Row 7, Column 2"
    },
    {
      "type": "text",
      "id": "cell_7_3",
      "label": "Row 7, Column 3"
    },
    {
      "type": "text",
      "id": "cell_7_4",
      "label": "Row 7, Column 4"
    },
    {
      "type": "text",
      "id": "cell_7_5",
      "label": "Row 7, Column 5"
    },
    {
      "type": "text",
      "id": "cell_7_6",
      "label": "Row 7, Column 6"
    },
    {
      "type": "header",
      "content": "Row 8 Data"
    },
    {
      "type": "text",
      "id": "cell_8_1",
      "label": "Row 8, Column 1"
    },
    {
      "type": "text",
      "id": "cell_8_2",
      "label": "Row 8, Column 2"
    },
    {
      "type": "text",
      "id": "cell_8_3",
      "label": "Row 8, Column 3"
    },
    {
      "type": "text",
      "id": "cell_8_4",
      "label": "Row 8, Column 4"
    },
    {
      "type": "text",
      "id": "cell_8_5",
      "label": "Row 8, Column 5"
    },
    {
      "type": "text",
      "id": "cell_8_6",
      "label": "Row 8, Column 6"
    },
    {
      "type": "header",
      "content": "Style"
    },
    {
      "type": "color",
      "id": "table_background",
      "label": "Table background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "header_background",
      "label": "Header background",
      "default": "#f8f9fa"
    },
    {
      "type": "color",
      "id": "header_text_color",
      "label": "Header text color",
      "default": "#1d4d41"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#1d4d41"
    },
    {
      "type": "color",
      "id": "border_color",
      "label": "Border color",
      "default": "#e6e6e6"
    },
    {
      "type": "color",
      "id": "alternate_row_background",
      "label": "Alternate row background",
      "default": "#f9f9f9"
    },
    {
      "type": "select",
      "id": "text_alignment",
      "label": "Text alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center"
    },
    {
      "type": "range",
      "id": "font_size",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Font size",
      "default": 14
    },
    {
      "type": "range",
      "id": "cell_padding",
      "min": 8,
      "max": 32,
      "step": 2,
      "unit": "px",
      "label": "Cell padding",
      "default": 16
    },
    {
      "type": "range",
      "id": "border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Border radius",
      "default": 8
    },
    {
      "type": "header",
      "content": "Mobile Navigation"
    },
    {
      "type": "color",
      "id": "nav_button_background",
      "label": "Navigation button background",
      "default": "#1d4d41"
    },
    {
      "type": "color",
      "id": "nav_button_text",
      "label": "Navigation button text",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "nav_button_hover",
      "label": "Navigation button hover",
      "default": "#0b2e25"
    }
  ],
  "presets": [
    {
      "name": "Comparison Table"
    }
  ]
}
{% endschema %}